{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\ninterface PageHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  description?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n}\n\nexport function PageHeader({\n  title,\n  description,\n  titleClassName,\n  descriptionClassName,\n  className,\n  ...props\n}: PageHeaderProps) {\n  return (\n    <div className={cn(\"py-12 text-center animate-fade-in\", className)} {...props}>\n      <h1\n        className={cn(\n          \"text-4xl font-bold tracking-tight sm:text-5xl lg:text-6xl font-headline text-foreground\",\n          titleClassName\n        )}\n      >\n        {title}\n      </h1>\n      {description && (\n        <p\n          className={cn(\n            \"mt-4 max-w-2xl mx-auto text-lg text-muted-foreground\",\n            descriptionClassName\n          )}\n        >\n          {description}\n        </p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AASO,SAAS,WAAW,EACzB,KAAK,EACL,WAAW,EACX,cAAc,EACd,oBAAoB,EACpB,SAAS,EACT,GAAG,OACa;IAChB,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAAa,GAAG,KAAK;;0BAC3E,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2FACA;0BAGD;;;;;;YAEF,6BACC,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;0BAGD;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { AppointmentFormValues, SiteSettingsFormValues, StyleAdvisorFormValues, ProductFormValues } from '@/lib/schemas';\nimport { getStyleRecommendationWithServices } from '@/ai/flows/style-recommendation-with-services';\nimport type { Product } from '@/app/products/page';\nimport { revalidatePath } from 'next/cache';\nimport { firestore } from '@/lib/firebase';\nimport { collection, getDocs, addDoc, deleteDoc, doc, Timestamp, updateDoc, getDoc, query, where, orderBy } from 'firebase/firestore';\n\n// Firestore collection references\nconst appointmentsCollectionRef = collection(firestore, 'appointments');\nconst productsCollectionRef = collection(firestore, 'products');\n\n// --- Appointment Types ---\nexport type Appointment = {\n  id: string;\n  userId: string;\n  preferredDate: string; // ISO string for client\n  preferredTime: string;\n  services: string[];\n  message?: string;\n  status: 'pending' | 'confirmed' | 'cancelled' | string;\n  createdAt: string; // ISO string for client\n};\n\n// --- Appointment Actions ---\nexport async function submitAppointmentRequest(data: AppointmentFormValues) {\n  console.log(\"Server Action: submitAppointmentRequest received data:\", data);\n  try {\n    const clientPreferredDate = data.preferredDate; \n    \n    const normalizedPreferredDateObject = new Date(clientPreferredDate);\n    normalizedPreferredDateObject.setHours(0, 0, 0, 0); \n    \n    const preferredDateTimestamp = Timestamp.fromDate(normalizedPreferredDateObject);\n    console.log(\"Server Action: Normalized preferredDate to Timestamp:\", preferredDateTimestamp.toDate().toISOString());\n\n    const qCheck = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', preferredDateTimestamp),\n      where('preferredTime', '==', data.preferredTime),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n\n    const existingAppointmentsSnap = await getDocs(qCheck);\n    if (!existingAppointmentsSnap.empty) {\n      console.log(\"Server Action: Double booking detected for\", preferredDateTimestamp.toDate().toISOString(), data.preferredTime);\n      return { success: false, message: 'Este horario ya no está disponible. Por favor, elige otro.' };\n    }\n\n    const appointmentData = {\n      userId: data.userId,\n      preferredDate: preferredDateTimestamp, \n      preferredTime: data.preferredTime,\n      services: data.services,\n      message: data.message || '',\n      status: 'pending',\n      createdAt: Timestamp.now(),\n    };\n    console.log(\"Server Action: Attempting to add appointment to Firestore with data:\", appointmentData);\n    await addDoc(appointmentsCollectionRef, appointmentData);\n    console.log(\"Server Action: Appointment added successfully.\");\n    revalidatePath('/book'); \n    revalidatePath('/admin'); \n    return { success: true, message: 'Solicitud de cita enviada con éxito. Nos pondremos en contacto contigo pronto para confirmar.' };\n  } catch (error) {\n    console.error(\"Server Action: Error submitting appointment to Firestore:\", error);\n    return { success: false, message: 'Error al enviar la solicitud de cita. Por favor, inténtalo de nuevo.' };\n  }\n}\n\nexport async function getAppointments(): Promise<Appointment[]> {\n  console.log(\"Admin: Attempting to fetch appointments from Firestore...\");\n  try {\n    // TEMPORARILY SIMPLIFIED QUERY: Removed orderBy to diagnose index/rules issues.\n    // Original query: const q = query(appointmentsCollectionRef, orderBy('preferredDate', 'desc'), orderBy('createdAt', 'desc'));\n    const q = query(appointmentsCollectionRef); \n    console.log(\"Admin: Using SIMPLIFIED query (no orderBy).\");\n\n    const querySnapshot = await getDocs(q);\n    console.log(`Admin: Found ${querySnapshot.docs.length} appointment documents in total using simplified query.`);\n    \n    if (querySnapshot.empty) {\n      console.warn(\"Admin: No appointments matched the simplified query. This STRONGLY SUGGESTS an issue with:\");\n      console.warn(\"1. Firestore security rules preventing read access for the admin user ('joacoadmin@admin.com').\");\n      console.warn(\"2. No appointments actually existing in the 'appointments' collection.\");\n      console.warn(\"PLEASE VERIFY YOUR FIRESTORE SECURITY RULES and ensure data exists.\");\n      return [];\n    }\n\n    const appointments = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let preferredDateISO: string;\n      let createdAtISO: string;\n\n      if (data.preferredDate && typeof data.preferredDate.toDate === 'function') {\n        preferredDateISO = data.preferredDate.toDate().toISOString();\n      } else {\n        console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing preferredDate. Firestore data:`, data.preferredDate);\n        preferredDateISO = new Date(0).toISOString(); \n      }\n\n      if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing createdAt. Firestore data:`, data.createdAt);\n        createdAtISO = new Date(0).toISOString(); \n      }\n      \n      const appointment: Appointment = {\n        id: docSnap.id,\n        userId: data.userId || 'Unknown User', \n        preferredDate: preferredDateISO,\n        preferredTime: data.preferredTime || 'N/A', \n        services: Array.isArray(data.services) ? data.services : [], \n        message: data.message || '',\n        status: data.status || 'unknown', \n        createdAt: createdAtISO,\n      };\n      return appointment;\n    });\n    console.log(`Admin: Successfully mapped ${appointments.length} appointments from simplified query.`);\n    // If data is fetched with simplified query, sort manually here for now.\n    // This won't be as efficient as Firestore's orderBy but helps for diagnosis.\n    return appointments.sort((a, b) => {\n      const dateA = new Date(a.preferredDate).getTime();\n      const dateB = new Date(b.preferredDate).getTime();\n      if (dateB !== dateA) return dateB - dateA;\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    });\n\n\n  } catch (error: any) { \n    console.error(\"Admin: Error fetching or mapping appointments from Firestore:\", error);\n     if (error.code === 'failed-precondition') { \n        console.error(\"IMPORTANT: Firestore 'failed-precondition' error. This OFTEN means a composite index is required for your query (e.g., for orderBy clauses). Check the DETAILED error message in the Firebase/Next.js server console. It usually provides a link to create the missing index.\");\n    }\n    return [];\n  }\n}\n\nexport async function getBookedSlotsForDate(date: Date): Promise<string[]> {\n  try {\n    const targetDay = new Date(date);\n    targetDay.setHours(0,0,0,0); \n\n    const q = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', Timestamp.fromDate(targetDay)),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n    const querySnapshot = await getDocs(q);\n    const bookedSlots = querySnapshot.docs.map(docSnap => docSnap.data().preferredTime as string);\n    return bookedSlots;\n  } catch (error) {\n    console.error(\"Error fetching booked slots:\", error);\n    return [];\n  }\n}\n\n\n// --- AI Style Advice Actions ---\nexport async function getAIStyleAdvice(data: StyleAdvisorFormValues) {\n  try {\n    const recommendation = await getStyleRecommendationWithServices({\n      hairType: data.hairType,\n      faceShape: data.faceShape,\n      preferences: data.stylePreferences,\n    });\n    return { success: true, data: recommendation };\n  } catch (error) {\n    console.error('Error getting AI style advice:', error);\n    return { success: false, message: 'Failed to get style advice. Please try again later.' };\n  }\n}\n\n// --- Site Settings Actions ---\nexport async function submitSiteSettings(data: SiteSettingsFormValues) {\n  console.log('Site Settings Update Received:', data);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return { success: true, message: '¡Configuración del sitio guardada con éxito! (Simulado)' };\n}\n\n// --- Product Management Actions ---\nexport async function getProducts(): Promise<Product[]> {\n  try {\n    const querySnapshot = await getDocs(productsCollectionRef);\n    const products = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let imageSrcVal = 'https://placehold.co/400x400.png';\n      if (typeof data.imageSrc === 'string' && (data.imageSrc.startsWith('http://') || data.imageSrc.startsWith('https://'))) {\n        imageSrcVal = data.imageSrc;\n      } else if (data.imageSrc && data.imageSrc.trim() !== '') {\n        console.warn(`Product ID ${docSnap.id} has an imageSrc in Firestore that is not a valid http/https URL or is empty: \"${data.imageSrc}\". Defaulting to placeholder.`);\n      } else if (!data.imageSrc) {\n         console.warn(`Product ID ${docSnap.id} is missing imageSrc in Firestore. Defaulting to placeholder.`);\n      }\n      \n      return {\n        id: docSnap.id,\n        name: data.name || 'Unnamed Product',\n        description: data.description || '',\n        price: data.price || 'ARS$ 0',\n        imageSrc: imageSrcVal,\n        aiHint: data.aiHint || '',\n        stock: typeof data.stock === 'number' ? data.stock : 0,\n        createdAt: data.createdAt ? (data.createdAt as Timestamp).toDate().toISOString() : undefined,\n      } as Product;\n    });\n    return products;\n  } catch (error) {\n    console.error(\"Error fetching products from Firestore:\", error);\n    return [];\n  }\n}\n\nexport async function addProduct(data: ProductFormValues) {\n  try {\n    const productDataToAdd = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n      createdAt: Timestamp.now()\n    };\n    const docRef = await addDoc(productsCollectionRef, productDataToAdd);\n    const newProduct: Product = {\n      id: docRef.id,\n      ...productDataToAdd,\n      createdAt: productDataToAdd.createdAt.toDate().toISOString(),\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto añadido con éxito a Firestore.', product: newProduct };\n  } catch (error) {\n    console.error(\"Error adding product to Firestore:\", error);\n    return { success: false, message: 'Error al añadir el producto a Firestore. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function updateProduct(data: ProductFormValues) {\n  if (!data.id) {\n    return { success: false, message: 'Product ID is missing for update.' };\n  }\n  try {\n    const productDocRef = doc(firestore, 'products', data.id);\n    const productDataToUpdate = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n    };\n    await updateDoc(productDocRef, productDataToUpdate);\n    const updatedDocSnap = await getDoc(productDocRef);\n    if (!updatedDocSnap.exists()) {\n        return { success: false, message: 'Failed to retrieve updated product.' };\n    }\n    const updatedData = updatedDocSnap.data();\n    let imageSrcVal = 'https://placehold.co/400x400.png';\n    if (typeof updatedData.imageSrc === 'string' && (updatedData.imageSrc.startsWith('http://') || updatedData.imageSrc.startsWith('https://'))) {\n        imageSrcVal = updatedData.imageSrc;\n    }\n    const updatedProduct: Product = {\n      id: updatedDocSnap.id,\n      name: updatedData.name,\n      description: updatedData.description,\n      price: updatedData.price,\n      imageSrc: imageSrcVal,\n      aiHint: updatedData.aiHint,\n      stock: updatedData.stock,\n      createdAt: updatedData.createdAt ? (updatedData.createdAt as Timestamp).toDate().toISOString() : undefined,\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto actualizado con éxito.', product: updatedProduct };\n  } catch (error) {\n    console.error(\"Error updating product in Firestore:\", error);\n    return { success: false, message: 'Error al actualizar el producto. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function deleteProduct(productId: string) {\n  try {\n    const productDocRef = doc(firestore, 'products', productId);\n    await deleteDoc(productDocRef);\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto eliminado con éxito de Firestore.' };\n  } catch (error) {\n    console.error(\"Error deleting product from Firestore:\", error);\n    return { success: false, message: 'Error al eliminar el producto de Firestore. Inténtalo de nuevo.' };\n  }\n}\n\n    "],"names":[],"mappings":";;;;;;;;;;;;;IA2BsB;IA6CA;IAsEA;IAqBA;IAeA;IAOA;IAgCA;IA0BA;IA2CA","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Client-side Appointment Form Schema (used by react-hook-form)\nexport const clientAppointmentSchema = z.object({\n  preferredDate: z.date({ required_error: \"Por favor, selecciona una fecha.\"}),\n  preferredTime: z.string().min(1, { message: \"Por favor, selecciona un horario.\"}),\n  services: z.array(z.string()).min(1, { message: \"Por favor, selecciona al menos un servicio.\"}),\n  message: z.string().optional(),\n});\nexport type ClientAppointmentFormValues = z.infer<typeof clientAppointmentSchema>;\n\n// Server-side/Full Appointment Schema (used by server action)\n// This now explicitly includes userId, which is added by the client before sending to the server.\nexport const appointmentSchema = clientAppointmentSchema.extend({\n  userId: z.string().min(1, { message: \"User ID is required.\" }),\n});\nexport type AppointmentFormValues = z.infer<typeof appointmentSchema>;\n\n\n// Style Advisor Form Schema\nexport const styleAdvisorSchema = z.object({\n  hairType: z.string().min(1, { message: \"Please select your hair type.\" }),\n  faceShape: z.string().min(1, { message: \"Please select your face shape.\" }),\n  stylePreferences: z.string().min(3, { message: \"Describe your style preferences (min 3 chars).\" }),\n});\nexport type StyleAdvisorFormValues = z.infer<typeof styleAdvisorSchema>;\n\n// Login Form Schema\nexport const loginSchema = z.object({\n  email: z.string().email({ message: \"Correo electrónico inválido.\" }),\n  password: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n});\nexport type LoginFormData = z.infer<typeof loginSchema>;\n\n// Register Form Schema\nexport const registerSchema = z.object({\n  fullName: z.string().min(2, { message: \"El nombre completo debe tener al menos 2 caracteres.\" }),\n  email: z.string().email({ message: \"Correo electrónico inválido.\" }),\n  phoneNumber: z.string().min(8, { message: \"El número de teléfono debe tener al menos 8 dígitos.\" }),\n  password: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n  confirmPassword: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Las contraseñas no coinciden.\",\n  path: [\"confirmPassword\"], // path of error\n});\nexport type RegisterFormData = z.infer<typeof registerSchema>;\n\n// Site Settings Form Schema\nexport const siteSettingsSchema = z.object({\n  siteName: z.string().min(1, { message: \"El nombre del sitio no puede estar vacío.\" }),\n  siteDescription: z.string().min(1, { message: \"La descripción del sitio no puede estar vacía.\" }),\n});\nexport type SiteSettingsFormValues = z.infer<typeof siteSettingsSchema>;\n\n// Product Form Schema\nexport const productSchema = z.object({\n  id: z.string().optional(), // Optional for new products, required for existing\n  name: z.string().min(3, { message: \"El nombre del producto debe tener al menos 3 caracteres.\" }),\n  description: z.string().min(10, { message: \"La descripción debe tener al menos 10 caracteres.\" }),\n  price: z.string().regex(/^ARS\\$\\s?\\d+(\\.\\d{1,2})?$/, { message: \"El precio debe estar en formato ARS$ XXXX o ARS$ XXXX.XX\" }),\n  imageSrc: z.string()\n    .min(1, { message: \"La URL de la imagen no puede estar vacía.\" })\n    .url({ message: \"Por favor, introduce una URL de imagen válida.\" })\n    .refine(val => val.startsWith('http://') || val.startsWith('https://'), {\n      message: \"La URL debe empezar con http:// o https://\",\n    }),\n  aiHint: z.string().min(2, { message: \"La pista de IA debe tener al menos 2 caracteres.\" }),\n  stock: z.coerce.number().min(0, { message: \"El stock no puede ser negativo.\" }).optional().default(0),\n});\nexport type ProductFormValues = z.infer<typeof productSchema>;\n"],"names":[],"mappings":";;;;;;;;;AACA;;AAGO,MAAM,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,eAAe,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAAkC;IAC1E,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmC;IAC/E,UAAU,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAA6C;IAC7F,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC9B;AAKO,MAAM,oBAAoB,wBAAwB,MAAM,CAAC;IAC9D,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAuB;AAC9D;AAKO,MAAM,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAgC;IACvE,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAiC;IACzE,kBAAkB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAiD;AAClG;AAIO,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAA+B;IAClE,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkD;AAC3F;AAIO,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAuD;IAC9F,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAA+B;IAClE,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAuD;IACjG,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkD;IACzF,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkD;AAClG,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,KAAK,eAAe,EAAE;IAC1D,SAAS;IACT,MAAM;QAAC;KAAkB;AAC3B;AAIO,MAAM,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA4C;IACnF,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAiD;AACjG;AAIO,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,IAAI,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACvB,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA2D;IAC9F,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;QAAE,SAAS;IAAoD;IAC/F,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC,6BAA6B;QAAE,SAAS;IAA2D;IAC3H,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GACf,GAAG,CAAC,GAAG;QAAE,SAAS;IAA4C,GAC9D,GAAG,CAAC;QAAE,SAAS;IAAiD,GAChE,MAAM,CAAC,CAAA,MAAO,IAAI,UAAU,CAAC,cAAc,IAAI,UAAU,CAAC,aAAa;QACtE,SAAS;IACX;IACF,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmD;IACxF,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkC,GAAG,QAAQ,GAAG,OAAO,CAAC;AACrG","debugId":null}},
    {"offset": {"line": 563, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/book/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Calendar } from \"@/components/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport { cn } from \"@/lib/utils\"\nimport { CalendarIcon, Loader2, Clock } from \"lucide-react\"\nimport { format } from \"date-fns\"\nimport { es } from 'date-fns/locale'; \nimport Link from 'next/link';\n\nimport { PageHeader } from '@/components/page-header';\nimport { submitAppointmentRequest, getBookedSlotsForDate } from '@/app/actions';\nimport { type ClientAppointmentFormValues, clientAppointmentSchema, type AppointmentFormValues } from '@/lib/schemas';\nimport { useToast } from '@/hooks/use-toast';\nimport React, { useEffect } from 'react';\nimport { useAuth } from '@/context/AuthContext';\n\nconst availableServices = [\n  { id: 'classic-cut', label: 'Corte de Pelo Clásico' },\n  { id: 'modern-style', label: 'Corte Moderno + Styling' },\n  { id: 'classic-shave', label: 'Afeitado Clásico' },\n  { id: 'beard-trim', label: 'Perfilado de Barba' },\n  { id: 'coloring', label: 'Coloración' },\n];\n\nconst timeSlots = [\n  \"09:00 AM\", \"09:30 AM\", \"10:00 AM\", \"10:30 AM\", \"11:00 AM\", \"11:30 AM\", \n  \"12:00 PM\", \"12:30 PM\", \"01:00 PM\", \"01:30 PM\", \"02:00 PM\", \"02:30 PM\", \n  \"03:00 PM\", \"03:30 PM\", \"04:00 PM\", \"04:30 PM\", \"05:00 PM\", \"05:30 PM\",\n  \"06:00 PM\", \"06:30 PM\", \"07:00 PM\"\n];\n\nconst MIN_ADVANCE_BOOKING_MINUTES = 15;\nconst now = new Date(); // Define now once at the component level\n\nexport default function BookAppointmentPage() {\n  const { toast } = useToast();\n  const { currentUser } = useAuth(); \n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedTimeSlot, setSelectedTimeSlot] = React.useState<string | undefined>(undefined);\n  const [bookedSlots, setBookedSlots] = React.useState<string[]>([]);\n  const [isLoadingBookedSlots, setIsLoadingBookedSlots] = React.useState(false);\n\n  const form = useForm<ClientAppointmentFormValues>({\n    resolver: zodResolver(clientAppointmentSchema),\n    defaultValues: {\n      services: [],\n      preferredDate: undefined,\n      preferredTime: '',\n      message: '',\n    },\n  });\n\n  const watchedDate = form.watch('preferredDate');\n  const formattedSelectedDate = watchedDate \n    ? format(watchedDate, \"'Para el' EEEE, d 'de' MMMM 'de' yyyy\", { locale: es }) \n    : \"Selecciona una fecha primero\";\n\n  useEffect(() => {\n    let isActive = true;\n\n    const fetchBookedSlots = async () => {\n      if (!watchedDate) {\n        if (isActive) {\n          setBookedSlots([]);\n          setSelectedTimeSlot(undefined);\n          form.setValue('preferredTime', '');\n          setIsLoadingBookedSlots(false); \n        }\n        return;\n      }\n\n      if (isActive) {\n        setSelectedTimeSlot(undefined); \n        form.setValue('preferredTime', ''); \n        setIsLoadingBookedSlots(true); \n        // No es necesario setBookedSlots([]) aquí, el loader se encargará\n      }\n\n      try {\n        const slots = await getBookedSlotsForDate(watchedDate);\n        if (isActive) {\n          setBookedSlots(slots); \n        }\n      } catch (error) {\n        if (isActive) {\n          console.error(\"Error fetching booked slots:\", error);\n          toast({ title: 'Error', description: 'No se pudieron cargar los horarios ocupados.', variant: 'destructive' });\n          setBookedSlots([]); \n        }\n      } finally {\n        if (isActive) {\n          setIsLoadingBookedSlots(false);\n        }\n      }\n    };\n\n    fetchBookedSlots();\n\n    return () => {\n      isActive = false; \n    };\n  }, [watchedDate]);\n\n\n  async function onSubmit(data: ClientAppointmentFormValues) {\n    console.log(\"Submitting appointment with payload:\", data);\n    if (!currentUser) {\n      toast({\n        title: 'Error de Autenticación',\n        description: 'Debes iniciar sesión para solicitar una cita.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    let result;\n    \n    try {\n      const payloadForServer: AppointmentFormValues = {\n        ...data,\n        userId: currentUser.uid,\n      };\n      result = await submitAppointmentRequest(payloadForServer);\n    } catch (error) {\n      console.error(\"Unexpected error submitting appointment:\", error);\n      toast({\n        title: 'Error Inesperado',\n        description: 'Ocurrió un error al procesar tu solicitud. Inténtalo de nuevo.',\n        variant: 'destructive',\n      });\n      setIsLoading(false);\n      return;\n    }\n    \n    setIsLoading(false);\n\n    if (result.success) {\n      toast({\n        title: '¡Éxito!',\n        description: result.message,\n      });\n      form.reset({ \n        services: [], \n        preferredDate: watchedDate,\n        preferredTime: '', \n        message: '' \n      });\n      setSelectedTimeSlot(undefined);\n      if (watchedDate) { \n        setIsLoadingBookedSlots(true);\n        // No es necesario setBookedSlots([]) aquí\n        getBookedSlotsForDate(watchedDate)\n          .then(newSlots => {\n            setBookedSlots(newSlots);\n          })\n          .catch(fetchError => {\n            console.error(\"Error re-fetching booked slots after submission:\", fetchError);\n          })\n          .finally(() => {\n            setIsLoadingBookedSlots(false);\n          });\n      }\n    } else {\n      toast({\n        title: 'Error',\n        description: result.message,\n        variant: 'destructive',\n      });\n       if (result.message && result.message.includes('Este horario ya no está disponible')) {\n          if (watchedDate) {\n            setIsLoadingBookedSlots(true);\n            // No es necesario setBookedSlots([]) aquí\n            getBookedSlotsForDate(watchedDate)\n              .then(newSlots => {\n                setBookedSlots(newSlots);\n              })\n              .catch(fetchError => {\n                console.error(\"Error re-fetching booked slots after failed booking:\", fetchError);\n              })\n              .finally(() => {\n                setIsLoadingBookedSlots(false);\n              });\n          }\n       }\n    }\n  }\n\n  const availableSlotsToDisplay = React.useMemo(() => {\n    if (!watchedDate) return [];\n\n    return timeSlots.filter(slot => {\n        const isToday = format(watchedDate, 'yyyy-MM-dd') === format(now, 'yyyy-MM-dd');\n        let slotIsTooSoonOrPast = false;\n\n        if (isToday) {\n            const timeParts = slot.split(' ');\n            const timeDigits = timeParts[0].split(':');\n            let slotHours = parseInt(timeDigits[0]);\n            const slotMinutes = parseInt(timeDigits[1]);\n            const period = timeParts[1].toUpperCase();\n\n            if (period === 'PM' && slotHours !== 12) slotHours += 12;\n            else if (period === 'AM' && slotHours === 12) slotHours = 0; \n\n            const slotStartDateTime = new Date(watchedDate); // Use a new date object for each slot\n            slotStartDateTime.setHours(slotHours, slotMinutes, 0, 0);\n            \n            // Calculate cutoff time relative to the *current* `now`\n            const cutoffTime = new Date(new Date().getTime() + MIN_ADVANCE_BOOKING_MINUTES * 60 * 1000);\n\n            if (slotStartDateTime <= cutoffTime) {\n                slotIsTooSoonOrPast = true;\n            }\n        }\n        \n        const isSlotBooked = bookedSlots.includes(slot);\n        \n        return !isSlotBooked && !slotIsTooSoonOrPast;\n    });\n  }, [watchedDate, bookedSlots]); // isLoadingBookedSlots removed as filter runs when data is ready\n\n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      <PageHeader\n        title=\"Reservar Tu Cita\"\n        description=\"Completa el siguiente formulario para solicitar una cita. Nos pondremos en contacto contigo pronto para confirmar.\"\n      />\n      <div className=\"max-w-2xl mx-auto\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n            <FormField\n              control={form.control}\n              name=\"preferredDate\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-col\">\n                  <FormLabel className=\"text-lg font-semibold\">Fecha Preferida</FormLabel>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <FormControl>\n                        <Button\n                          variant={\"outline\"}\n                          className={cn(\n                            \"w-full pl-3 text-left font-normal text-base py-6\",\n                            !field.value && \"text-muted-foreground\"\n                          )}\n                        >\n                          {field.value ? (\n                            format(field.value, \"PPP\", { locale: es })\n                          ) : (\n                            <span>Selecciona una fecha</span>\n                          )}\n                          <CalendarIcon className=\"ml-auto h-5 w-5 opacity-50\" />\n                        </Button>\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={field.value}\n                        onSelect={(date) => {\n                          field.onChange(date);\n                        }}\n                        disabled={(date) =>\n                          date < new Date(new Date().setDate(new Date().getDate() -1)) || date < new Date(\"1900-01-01\")\n                        }\n                        initialFocus\n                        locale={es} \n                      />\n                    </PopoverContent>\n                  </Popover>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"preferredTime\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-lg font-semibold flex items-center\">\n                    <Clock className=\"mr-2 h-5 w-5 text-primary\" />\n                    Horarios Disponibles\n                  </FormLabel>\n                  <p className=\"text-sm text-muted-foreground mb-3\">{formattedSelectedDate}</p>\n                  \n                  <div className=\"min-h-[70px] py-2\">\n                    {!watchedDate ? (\n                      <p key=\"no-date\" className=\"text-sm text-muted-foreground text-center\">Por favor, selecciona una fecha para ver los horarios.</p>\n                    ) : isLoadingBookedSlots ? (\n                      <div key=\"loading-slots\" className=\"flex justify-center items-center h-full\">\n                        <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                        <span className=\"ml-2\">Cargando horarios...</span>\n                      </div>\n                    ) : (\n                      <div key=\"slots-grid\" className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 gap-3\">\n                        {availableSlotsToDisplay.length === 0 ? (\n                           <p className=\"text-sm text-muted-foreground text-center col-span-full\">\n                             No hay horarios disponibles para esta fecha.\n                           </p>\n                        ) : (\n                          availableSlotsToDisplay.map((slot) => (\n                            <Button\n                              key={slot}\n                              type=\"button\"\n                              variant={selectedTimeSlot === slot ? \"default\" : \"outline\"}\n                              className={cn(\n                                \"w-full py-3 text-sm\",\n                                selectedTimeSlot === slot\n                                  ? \"bg-primary text-primary-foreground hover:bg-primary/90\" \n                                  : \"text-foreground hover:bg-muted\"\n                              )}\n                              onClick={() => {\n                                setSelectedTimeSlot(slot);\n                                field.onChange(slot);\n                              }}\n                            >\n                              {slot}\n                            </Button>\n                          ))\n                        )}\n                      </div>\n                    )}\n                  </div>\n                  <FormMessage className=\"mt-2\" />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"services\"\n              render={() => (\n                <FormItem>\n                  <div className=\"mb-4\">\n                    <FormLabel className=\"text-lg font-semibold\">Servicios</FormLabel>\n                    <FormDescription className=\"text-sm\">\n                      Selecciona el/los servicio(s) que te interesan.\n                    </FormDescription>\n                  </div>\n                  <div className=\"space-y-2\">\n                    {availableServices.map((service) => (\n                      <FormField\n                        key={service.id}\n                        control={form.control}\n                        name=\"services\"\n                        render={({ field }) => {\n                          return (\n                            <FormItem\n                              className=\"flex flex-row items-center space-x-3 space-y-0 p-2 rounded-md hover:bg-muted transition-colors\"\n                            >\n                              <FormControl>\n                                <Checkbox\n                                  checked={field.value?.includes(service.id)}\n                                  onCheckedChange={(checked) => {\n                                    return checked\n                                      ? field.onChange([...(field.value || []), service.id])\n                                      : field.onChange(\n                                          (field.value || []).filter(\n                                            (value) => value !== service.id\n                                          )\n                                        )\n                                  }}\n                                  className=\"h-5 w-5\"\n                                />\n                              </FormControl>\n                              <FormLabel className=\"font-normal text-base cursor-pointer\">\n                                {service.label}\n                              </FormLabel>\n                            </FormItem>\n                          )\n                        }}\n                      />\n                    ))}\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"message\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-lg font-semibold\">Mensaje Adicional (Opcional)</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"¿Alguna petición específica o nota?\"\n                      className=\"resize-none text-base p-3\"\n                      rows={4}\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <Button \n                type=\"submit\" \n                className=\"w-full py-6 text-lg\" \n                disabled={isLoading || !currentUser || isLoadingBookedSlots}\n              >\n              <Loader2 \n                className={cn(\n                  \"mr-2 h-5 w-5 animate-spin\",\n                  (isLoading || isLoadingBookedSlots) ? \"inline-block\" : \"hidden\"\n                )} \n              />\n              {isLoading || isLoadingBookedSlots ? (\n                'Procesando...'\n              ) : (\n                currentUser ? 'Solicitar Cita' : 'Inicia sesión para reservar'\n              )}\n            </Button>\n            {!currentUser && (\n                 <p className=\"text-sm text-center text-muted-foreground\">\n                    Debes <Link href=\"/login\" className=\"underline text-primary hover:text-primary/80\">iniciar sesión</Link> o <Link href=\"/register\" className=\"underline text-primary hover:text-primary/80\">registrarte</Link> para solicitar una cita.\n                 </p>\n            )}\n          </form>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}