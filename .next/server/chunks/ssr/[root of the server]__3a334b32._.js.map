{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/style-recommendation-with-services.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent that provides style recommendations based on user input and considers available barbershop services.\n *\n * - getStyleRecommendationWithServices - A function that provides style recommendations considering barbershop services.\n * - StyleRecommendationWithServicesInput - The input type for the getStyleRecommendationWithServices function.\n * - StyleRecommendationWithServicesOutput - The return type for the getStyleRecommendationWithServices function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst StyleRecommendationWithServicesInputSchema = z.object({\n  hairType: z.string().describe('The user\\'s hair type (e.g., curly, straight, wavy).'),\n  faceShape: z.string().describe('The user\\'s face shape (e.g., oval, square, round).'),\n  preferences: z.string().describe('The user\\'s style preferences and desired look.'),\n});\nexport type StyleRecommendationWithServicesInput = z.infer<typeof StyleRecommendationWithServicesInputSchema>;\n\nconst StyleRecommendationWithServicesOutputSchema = z.object({\n  styleRecommendation: z.string().describe('A detailed style recommendation based on the user input.'),\n  relevantServices: z.array(z.string()).describe('A list of barbershop services that would be helpful in achieving the recommended style.'),\n});\nexport type StyleRecommendationWithServicesOutput = z.infer<typeof StyleRecommendationWithServicesOutputSchema>;\n\nexport async function getStyleRecommendationWithServices(input: StyleRecommendationWithServicesInput): Promise<StyleRecommendationWithServicesOutput> {\n  return styleRecommendationWithServicesFlow(input);\n}\n\nconst barbershopServices = [\n  'Haircut', \n  'Beard Trim',\n  'Coloring', \n  'Highlights', \n  'Perm',\n  'Straightening',\n  'Scalp Treatment'\n];\n\nconst checkServiceRelevanceTool = ai.defineTool({\n  name: 'checkServiceRelevance',\n  description: 'Determines whether a barbershop service is relevant to achieving a specific hairstyle or look.',\n  inputSchema: z.object({\n    styleRecommendation: z.string().describe('The style recommendation being made to the user.'),\n    service: z.string().describe('A specific barbershop service to evaluate for relevance.'),\n  }),\n  outputSchema: z.boolean().describe('Whether the barbershop service is relevant to the style recommendation.'),\n}, async (input) => {\n  // Basic implementation - can be extended with more sophisticated logic.\n  // This simple implementation checks if the service is mentioned in the style recommendation.\n  return input.styleRecommendation.toLowerCase().includes(input.service.toLowerCase());\n});\n\nconst styleRecommendationPrompt = ai.definePrompt({\n  name: 'styleRecommendationPrompt',\n  input: {schema: StyleRecommendationWithServicesInputSchema},\n  output: {schema: StyleRecommendationWithServicesOutputSchema},\n  tools: [checkServiceRelevanceTool],\n  prompt: `You are a professional style advisor at a barbershop. Based on the user's hair type, face shape, and preferences, provide a style recommendation.\n\nHair Type: {{{hairType}}}\nFace Shape: {{{faceShape}}}\nPreferences: {{{preferences}}}\n\nConsider if any of the following services available at the barbershop might be helpful in achieving this style:\n${barbershopServices.join(', ')}\n\nUse the checkServiceRelevance tool to determine if any of the barbershop's services would be helpful in achieving the recommended style. If a service is deemed relevant by the tool, mention it explicitly in the styleRecommendation output field.\n`,\n});\n\nconst styleRecommendationWithServicesFlow = ai.defineFlow(\n  {\n    name: 'styleRecommendationWithServicesFlow',\n    inputSchema: StyleRecommendationWithServicesInputSchema,\n    outputSchema: StyleRecommendationWithServicesOutputSchema,\n  },\n  async input => {\n    const {output} = await styleRecommendationPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,6CAA6C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1D,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAGA,MAAM,8CAA8C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3D,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzC,kBAAkB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AACjD;AAGO,eAAe,uCAAgC,GAAhC,mCAAmC,KAA2C;IAClG,OAAO,oCAAoC;AAC7C;AAEA,MAAM,qBAAqB;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAC9C,MAAM;IACN,aAAa;IACb,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACpB,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACzC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B;IACA,cAAc,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,CAAC;AACrC,GAAG,OAAO;IACR,wEAAwE;IACxE,6FAA6F;IAC7F,OAAO,MAAM,mBAAmB,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,OAAO,CAAC,WAAW;AACnF;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAChD,MAAM;IACN,OAAO;QAAC,QAAQ;IAA0C;IAC1D,QAAQ;QAAC,QAAQ;IAA2C;IAC5D,OAAO;QAAC;KAA0B;IAClC,QAAQ,CAAC;;;;;;;AAOX,EAAE,mBAAmB,IAAI,CAAC,MAAM;;;AAGhC,CAAC;AACD;AAEA,MAAM,sCAAsC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACvD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,0BAA0B;IACjD,OAAO;AACT;;;IAvDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, type FirebaseApp } from 'firebase/app';\nimport { getAuth, type Auth } from 'firebase/auth';\nimport { getFirestore, type Firestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDrSCyZX-LRSY3N2wbXKN2wS8YNl4rRtdg\",\n  authDomain: \"joaco-barber.firebaseapp.com\",\n  projectId: \"joaco-barber\",\n  storageBucket: \"joaco-barber.firebasestorage.app\",\n  messagingSenderId: \"787887364483\",\n  appId: \"1:787887364483:web:d0ab6e60f3652cff037eb6\",\n  measurementId: \"G-2166J95XK4\"\n};\n\nlet app: FirebaseApp;\nlet auth: Auth;\nlet firestore: Firestore;\n\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0]!;\n}\n\nauth = getAuth(app);\nfirestore = getFirestore(app); // Initialize Firestore\n\nexport { app, auth, firestore };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AACtB,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACpB;AAEA,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACf,YAAY,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,MAAM,uBAAuB","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { AppointmentFormValues, SiteSettingsFormValues, StyleAdvisorFormValues, ProductFormValues } from '@/lib/schemas';\nimport { getStyleRecommendationWithServices } from '@/ai/flows/style-recommendation-with-services';\nimport type { Product } from '@/app/products/page';\nimport { revalidatePath } from 'next/cache';\nimport { firestore } from '@/lib/firebase';\nimport { collection, getDocs, addDoc, deleteDoc, doc, Timestamp, updateDoc, getDoc, query, where, orderBy } from 'firebase/firestore';\n\n// Firestore collection references\nconst appointmentsCollectionRef = collection(firestore, 'appointments');\nconst productsCollectionRef = collection(firestore, 'products');\n\n// --- Appointment Types ---\nexport type Appointment = {\n  id: string;\n  userId: string;\n  preferredDate: string; // ISO string for client\n  preferredTime: string;\n  services: string[];\n  message?: string;\n  status: 'pending' | 'confirmed' | 'cancelled' | string;\n  createdAt: string; // ISO string for client\n};\n\n// --- Appointment Actions ---\nexport async function submitAppointmentRequest(data: AppointmentFormValues) {\n  try {\n    // Server-side double booking check\n    const preferredDateObj = data.preferredDate; // This is already a JS Date object\n    \n    // Create a query to check for existing appointments for the exact date and time slot\n    // Firestore's Timestamp equality works well if the JS Date object represents the start of the day\n    // and we are matching against a Firestore Timestamp that also represents the start of that day.\n    const qCheck = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', Timestamp.fromDate(preferredDateObj)),\n      where('preferredTime', '==', data.preferredTime),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n\n    const existingAppointmentsSnap = await getDocs(qCheck);\n    if (!existingAppointmentsSnap.empty) {\n      return { success: false, message: 'Este horario ya no est√° disponible. Por favor, elige otro.' };\n    }\n\n    const appointmentData = {\n      userId: data.userId,\n      preferredDate: Timestamp.fromDate(data.preferredDate),\n      preferredTime: data.preferredTime,\n      services: data.services,\n      message: data.message || '',\n      status: 'pending',\n      createdAt: Timestamp.now(),\n    };\n    await addDoc(appointmentsCollectionRef, appointmentData);\n    revalidatePath('/book'); // Revalidate booking page to update booked slots\n    revalidatePath('/admin'); // Revalidate admin page if appointments are shown there\n    return { success: true, message: 'Solicitud de cita enviada con √©xito. Nos pondremos en contacto contigo pronto para confirmar.' };\n  } catch (error) {\n    console.error(\"Error submitting appointment to Firestore:\", error);\n    return { success: false, message: 'Error al enviar la solicitud de cita. Por favor, int√©ntalo de nuevo.' };\n  }\n}\n\nexport async function getAppointments(): Promise<Appointment[]> {\n  try {\n    const q = query(appointmentsCollectionRef, orderBy('preferredDate', 'desc'), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      return {\n        id: docSnap.id,\n        userId: data.userId,\n        preferredDate: (data.preferredDate as Timestamp).toDate().toISOString(),\n        preferredTime: data.preferredTime,\n        services: data.services,\n        message: data.message,\n        status: data.status,\n        createdAt: (data.createdAt as Timestamp).toDate().toISOString(),\n      } as Appointment;\n    });\n  } catch (error) {\n    console.error(\"Error fetching appointments:\", error);\n    return [];\n  }\n}\n\nexport async function getBookedSlotsForDate(date: Date): Promise<string[]> {\n  try {\n    // Normalize the input date to the start of the day to match how preferredDate is stored\n    const targetDay = new Date(date);\n    targetDay.setHours(0,0,0,0); // Set to start of the day for consistent comparison\n\n    const q = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', Timestamp.fromDate(targetDay)),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n    const querySnapshot = await getDocs(q);\n    const bookedSlots = querySnapshot.docs.map(docSnap => docSnap.data().preferredTime as string);\n    return bookedSlots;\n  } catch (error) {\n    console.error(\"Error fetching booked slots:\", error);\n    return [];\n  }\n}\n\n\n// --- AI Style Advice Actions ---\nexport async function getAIStyleAdvice(data: StyleAdvisorFormValues) {\n  try {\n    const recommendation = await getStyleRecommendationWithServices({\n      hairType: data.hairType,\n      faceShape: data.faceShape,\n      preferences: data.stylePreferences,\n    });\n    return { success: true, data: recommendation };\n  } catch (error) {\n    console.error('Error getting AI style advice:', error);\n    return { success: false, message: 'Failed to get style advice. Please try again later.' };\n  }\n}\n\n// --- Site Settings Actions ---\nexport async function submitSiteSettings(data: SiteSettingsFormValues) {\n  console.log('Site Settings Update Received:', data);\n  // This is a simulated action, no Firestore interaction for now.\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return { success: true, message: '¬°Configuraci√≥n del sitio guardada con √©xito! (Simulado)' };\n}\n\n// --- Product Management Actions ---\nexport async function getProducts(): Promise<Product[]> {\n  try {\n    const querySnapshot = await getDocs(productsCollectionRef);\n    const products = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let imageSrcVal = 'https://placehold.co/400x400.png';\n      if (typeof data.imageSrc === 'string' && (data.imageSrc.startsWith('http://') || data.imageSrc.startsWith('https://'))) {\n        imageSrcVal = data.imageSrc;\n      } else if (data.imageSrc && data.imageSrc.trim() !== '') {\n        console.warn(`Product ID ${docSnap.id} has an imageSrc in Firestore that is not a valid http/https URL or is empty: \"${data.imageSrc}\". Defaulting to placeholder.`);\n      } else if (!data.imageSrc) {\n         console.warn(`Product ID ${docSnap.id} is missing imageSrc in Firestore. Defaulting to placeholder.`);\n      }\n      \n      return {\n        id: docSnap.id,\n        name: data.name || 'Unnamed Product',\n        description: data.description || '',\n        price: data.price || 'ARS$ 0',\n        imageSrc: imageSrcVal,\n        aiHint: data.aiHint || '',\n        stock: typeof data.stock === 'number' ? data.stock : 0,\n        createdAt: data.createdAt ? (data.createdAt as Timestamp).toDate().toISOString() : undefined,\n      } as Product;\n    });\n    return products;\n  } catch (error) {\n    console.error(\"Error fetching products from Firestore:\", error);\n    return [];\n  }\n}\n\nexport async function addProduct(data: ProductFormValues) {\n  try {\n    const productDataToAdd = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n      createdAt: Timestamp.now()\n    };\n    const docRef = await addDoc(productsCollectionRef, productDataToAdd);\n    const newProduct: Product = {\n      id: docRef.id,\n      ...productDataToAdd,\n      createdAt: productDataToAdd.createdAt.toDate().toISOString(),\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto a√±adido con √©xito a Firestore.', product: newProduct };\n  } catch (error) {\n    console.error(\"Error adding product to Firestore:\", error);\n    return { success: false, message: 'Error al a√±adir el producto a Firestore. Int√©ntalo de nuevo.' };\n  }\n}\n\nexport async function updateProduct(data: ProductFormValues) {\n  if (!data.id) {\n    return { success: false, message: 'Product ID is missing for update.' };\n  }\n  try {\n    const productDocRef = doc(firestore, 'products', data.id);\n    const productDataToUpdate = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n    };\n    await updateDoc(productDocRef, productDataToUpdate);\n    const updatedDocSnap = await getDoc(productDocRef);\n    if (!updatedDocSnap.exists()) {\n        return { success: false, message: 'Failed to retrieve updated product.' };\n    }\n    const updatedData = updatedDocSnap.data();\n    let imageSrcVal = 'https://placehold.co/400x400.png';\n    if (typeof updatedData.imageSrc === 'string' && (updatedData.imageSrc.startsWith('http://') || updatedData.imageSrc.startsWith('https://'))) {\n        imageSrcVal = updatedData.imageSrc;\n    }\n    const updatedProduct: Product = {\n      id: updatedDocSnap.id,\n      name: updatedData.name,\n      description: updatedData.description,\n      price: updatedData.price,\n      imageSrc: imageSrcVal,\n      aiHint: updatedData.aiHint,\n      stock: updatedData.stock,\n      createdAt: updatedData.createdAt ? (updatedData.createdAt as Timestamp).toDate().toISOString() : undefined,\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto actualizado con √©xito.', product: updatedProduct };\n  } catch (error) {\n    console.error(\"Error updating product in Firestore:\", error);\n    return { success: false, message: 'Error al actualizar el producto. Int√©ntalo de nuevo.' };\n  }\n}\n\nexport async function deleteProduct(productId: string) {\n  try {\n    const productDocRef = doc(firestore, 'products', productId);\n    await deleteDoc(productDocRef);\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto eliminado con √©xito de Firestore.' };\n  } catch (error) {\n    console.error(\"Error deleting product from Firestore:\", error);\n    return { success: false, message: 'Error al eliminar el producto de Firestore. Int√©ntalo de nuevo.' };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 887, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oCACA","debugId":null}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}