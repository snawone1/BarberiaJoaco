{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\ninterface PageHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  description?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n}\n\nexport function PageHeader({\n  title,\n  description,\n  titleClassName,\n  descriptionClassName,\n  className,\n  ...props\n}: PageHeaderProps) {\n  return (\n    <div className={cn(\"py-12 text-center animate-fade-in\", className)} {...props}>\n      <h1\n        className={cn(\n          \"text-4xl font-bold tracking-tight sm:text-5xl lg:text-6xl font-headline text-foreground\",\n          titleClassName\n        )}\n      >\n        {title}\n      </h1>\n      {description && (\n        <p\n          className={cn(\n            \"mt-4 max-w-2xl mx-auto text-lg text-muted-foreground\",\n            descriptionClassName\n          )}\n        >\n          {description}\n        </p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AASO,SAAS,WAAW,EACzB,KAAK,EACL,WAAW,EACX,cAAc,EACd,oBAAoB,EACpB,SAAS,EACT,GAAG,OACa;IAChB,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAAa,GAAG,KAAK;;0BAC3E,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2FACA;0BAGD;;;;;;YAEF,6BACC,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;0BAGD;;;;;;;;;;;;AAKX;KA9BgB","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { AppointmentFormValues, SiteSettingsFormValues, StyleAdvisorFormValues, ProductFormValues } from '@/lib/schemas';\nimport { getStyleRecommendationWithServices } from '@/ai/flows/style-recommendation-with-services';\nimport type { Product } from '@/app/products/page';\nimport { revalidatePath } from 'next/cache';\nimport { firestore } from '@/lib/firebase';\nimport { collection, getDocs, addDoc, deleteDoc, doc, Timestamp, updateDoc, getDoc, query, where, orderBy } from 'firebase/firestore';\n\n// Firestore collection references\nconst appointmentsCollectionRef = collection(firestore, 'appointments');\nconst productsCollectionRef = collection(firestore, 'products');\n\n// --- Appointment Types ---\nexport type Appointment = {\n  id: string;\n  userId: string;\n  preferredDate: string; // ISO string for client\n  preferredTime: string;\n  services: string[];\n  message?: string;\n  status: string; // Kept as string for DB flexibility, UI will handle known states\n  createdAt: string; // ISO string for client\n};\n\n// --- Appointment Actions ---\nexport async function submitAppointmentRequest(data: AppointmentFormValues) {\n  console.log(\"Server Action: submitAppointmentRequest received data:\", data);\n  try {\n    const clientPreferredDate = data.preferredDate; \n    \n    const normalizedPreferredDateObject = new Date(clientPreferredDate);\n    normalizedPreferredDateObject.setHours(0, 0, 0, 0); \n    \n    const preferredDateTimestamp = Timestamp.fromDate(normalizedPreferredDateObject);\n    console.log(\"Server Action: Normalized preferredDate to Timestamp:\", preferredDateTimestamp.toDate().toISOString());\n\n    const qCheck = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', preferredDateTimestamp),\n      where('preferredTime', '==', data.preferredTime),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n\n    const existingAppointmentsSnap = await getDocs(qCheck);\n    if (!existingAppointmentsSnap.empty) {\n      console.log(\"Server Action: Double booking detected for\", preferredDateTimestamp.toDate().toISOString(), data.preferredTime);\n      return { success: false, message: 'Este horario ya no está disponible. Por favor, elige otro.' };\n    }\n\n    const appointmentData = {\n      userId: data.userId,\n      preferredDate: preferredDateTimestamp, \n      preferredTime: data.preferredTime,\n      services: data.services,\n      message: data.message || '',\n      status: 'pending', // Default status\n      createdAt: Timestamp.now(),\n    };\n    console.log(\"Server Action: Attempting to add appointment to Firestore with data:\", appointmentData);\n    await addDoc(appointmentsCollectionRef, appointmentData);\n    console.log(\"Server Action: Appointment added successfully.\");\n    revalidatePath('/book'); \n    revalidatePath('/admin'); \n    return { success: true, message: 'Solicitud de cita enviada con éxito. Nos pondremos en contacto contigo pronto para confirmar.' };\n  } catch (error) {\n    console.error(\"Server Action: Error submitting appointment to Firestore:\", error);\n    return { success: false, message: 'Error al enviar la solicitud de cita. Por favor, inténtalo de nuevo.' };\n  }\n}\n\nexport async function getAppointments(): Promise<Appointment[]> {\n  console.log(\"Admin: Attempting to fetch appointments from Firestore (with orderBy)...\");\n  try {\n    const q = query(\n      appointmentsCollectionRef, \n      orderBy('preferredDate', 'desc'), \n      orderBy('createdAt', 'desc')\n    );\n    console.log(\"Admin: Using query with orderBy('preferredDate', 'desc'), orderBy('createdAt', 'desc').\");\n\n    const querySnapshot = await getDocs(q);\n    console.log(`Admin: Found ${querySnapshot.docs.length} appointment documents in total.`);\n    \n    if (querySnapshot.empty) {\n      console.warn(\"Admin: No appointments matched the query. This could be due to:\");\n      console.warn(\"1. Firestore security rules preventing read access for the admin user ('joacoadmin@admin.com').\");\n      console.warn(\"2. No appointments actually existing in the 'appointments' collection.\");\n      console.warn(\"3. The composite index for orderBy clauses might still be building or was not created correctly.\");\n      console.warn(\"PLEASE VERIFY YOUR FIRESTORE SECURITY RULES, DATA, AND COMPOSITE INDEXES.\");\n      return [];\n    }\n\n    const appointments = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let preferredDateISO: string;\n      let createdAtISO: string;\n\n      if (data.preferredDate && typeof data.preferredDate.toDate === 'function') {\n        preferredDateISO = data.preferredDate.toDate().toISOString();\n      } else {\n        console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing preferredDate. Firestore data:`, data.preferredDate);\n        preferredDateISO = new Date(0).toISOString(); \n      }\n\n      if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing createdAt. Firestore data:`, data.createdAt);\n        createdAtISO = new Date(0).toISOString(); \n      }\n      \n      const appointment: Appointment = {\n        id: docSnap.id,\n        userId: data.userId || 'Unknown User', \n        preferredDate: preferredDateISO,\n        preferredTime: data.preferredTime || 'N/A', \n        services: Array.isArray(data.services) ? data.services : [], \n        message: data.message || '',\n        status: data.status || 'unknown', \n        createdAt: createdAtISO,\n      };\n      return appointment;\n    });\n    console.log(`Admin: Successfully mapped ${appointments.length} appointments.`);\n    return appointments; \n\n  } catch (error: any) { \n    console.error(\"Admin: Error fetching or mapping appointments from Firestore:\", error);\n     if (error.code === 'failed-precondition') { \n        console.error(\"IMPORTANT: Firestore 'failed-precondition' error. This OFTEN means a composite index is required for your query (e.g., for orderBy clauses). Check the DETAILED error message in the Firebase/Next.js server console. It usually provides a link to create the missing index if you haven't already or if it's still building.\");\n    } else {\n        console.error(\"An unexpected error occurred while fetching appointments:\", error.message, error.stack);\n    }\n    return [];\n  }\n}\n\nexport async function updateAppointmentStatus(appointmentId: string, newStatus: 'pending' | 'confirmed' | 'cancelled' | 'completed') {\n  console.log(`Server Action: updateAppointmentStatus called for ID: ${appointmentId} to status: ${newStatus}`);\n  try {\n    const appointmentDocRef = doc(firestore, 'appointments', appointmentId);\n    await updateDoc(appointmentDocRef, { status: newStatus });\n    console.log(`Server Action: Appointment ${appointmentId} status updated to ${newStatus} in Firestore.`);\n    revalidatePath('/admin');\n    return { success: true, message: `Estado de la cita actualizado a ${newStatus}.` };\n  } catch (error) {\n    console.error(`Server Action: Error updating appointment ${appointmentId} status in Firestore:`, error);\n    return { success: false, message: 'Error al actualizar el estado de la cita.' };\n  }\n}\n\n\nexport async function getBookedSlotsForDate(date: Date): Promise<string[]> {\n  try {\n    const targetDay = new Date(date);\n    targetDay.setHours(0,0,0,0); \n\n    const q = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', Timestamp.fromDate(targetDay)),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n    const querySnapshot = await getDocs(q);\n    const bookedSlots = querySnapshot.docs.map(docSnap => docSnap.data().preferredTime as string);\n    return bookedSlots;\n  } catch (error) {\n    console.error(\"Error fetching booked slots:\", error);\n    return [];\n  }\n}\n\n\n// --- AI Style Advice Actions ---\nexport async function getAIStyleAdvice(data: StyleAdvisorFormValues) {\n  try {\n    const recommendation = await getStyleRecommendationWithServices({\n      hairType: data.hairType,\n      faceShape: data.faceShape,\n      preferences: data.stylePreferences,\n    });\n    return { success: true, data: recommendation };\n  } catch (error) {\n    console.error('Error getting AI style advice:', error);\n    return { success: false, message: 'Failed to get style advice. Please try again later.' };\n  }\n}\n\n// --- Site Settings Actions ---\nexport async function submitSiteSettings(data: SiteSettingsFormValues) {\n  console.log('Site Settings Update Received:', data);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return { success: true, message: '¡Configuración del sitio guardada con éxito! (Simulado)' };\n}\n\n// --- Product Management Actions ---\nexport async function getProducts(): Promise<Product[]> {\n  try {\n    const querySnapshot = await getDocs(productsCollectionRef);\n    const products = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let imageSrcVal = 'https://placehold.co/400x400.png';\n      if (typeof data.imageSrc === 'string' && (data.imageSrc.startsWith('http://') || data.imageSrc.startsWith('https://'))) {\n        imageSrcVal = data.imageSrc;\n      } else if (data.imageSrc && data.imageSrc.trim() !== '') {\n        console.warn(`Product ID ${docSnap.id} has an imageSrc in Firestore that is not a valid http/https URL or is empty: \"${data.imageSrc}\". Defaulting to placeholder.`);\n      } else if (!data.imageSrc) {\n         console.warn(`Product ID ${docSnap.id} is missing imageSrc in Firestore. Defaulting to placeholder.`);\n      }\n      \n      return {\n        id: docSnap.id,\n        name: data.name || 'Unnamed Product',\n        description: data.description || '',\n        price: data.price || 'ARS$ 0',\n        imageSrc: imageSrcVal,\n        aiHint: data.aiHint || '',\n        stock: typeof data.stock === 'number' ? data.stock : 0,\n        createdAt: data.createdAt ? (data.createdAt as Timestamp).toDate().toISOString() : undefined,\n      } as Product;\n    });\n    return products;\n  } catch (error) {\n    console.error(\"Error fetching products from Firestore:\", error);\n    return [];\n  }\n}\n\nexport async function addProduct(data: ProductFormValues) {\n  try {\n    const productDataToAdd = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n      createdAt: Timestamp.now()\n    };\n    const docRef = await addDoc(productsCollectionRef, productDataToAdd);\n    const newProduct: Product = {\n      id: docRef.id,\n      ...productDataToAdd,\n      createdAt: productDataToAdd.createdAt.toDate().toISOString(),\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto añadido con éxito a Firestore.', product: newProduct };\n  } catch (error) {\n    console.error(\"Error adding product to Firestore:\", error);\n    return { success: false, message: 'Error al añadir el producto a Firestore. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function updateProduct(data: ProductFormValues) {\n  if (!data.id) {\n    return { success: false, message: 'Product ID is missing for update.' };\n  }\n  try {\n    const productDocRef = doc(firestore, 'products', data.id);\n    const productDataToUpdate = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n    };\n    await updateDoc(productDocRef, productDataToUpdate);\n    const updatedDocSnap = await getDoc(productDocRef);\n    if (!updatedDocSnap.exists()) {\n        return { success: false, message: 'Failed to retrieve updated product.' };\n    }\n    const updatedData = updatedDocSnap.data();\n    let imageSrcVal = 'https://placehold.co/400x400.png';\n    if (typeof updatedData.imageSrc === 'string' && (updatedData.imageSrc.startsWith('http://') || updatedData.imageSrc.startsWith('https://'))) {\n        imageSrcVal = updatedData.imageSrc;\n    }\n    const updatedProduct: Product = {\n      id: updatedDocSnap.id,\n      name: updatedData.name,\n      description: updatedData.description,\n      price: updatedData.price,\n      imageSrc: imageSrcVal,\n      aiHint: updatedData.aiHint,\n      stock: updatedData.stock,\n      createdAt: updatedData.createdAt ? (updatedData.createdAt as Timestamp).toDate().toISOString() : undefined,\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto actualizado con éxito.', product: updatedProduct };\n  } catch (error) {\n    console.error(\"Error updating product in Firestore:\", error);\n    return { success: false, message: 'Error al actualizar el producto. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function deleteProduct(productId: string) {\n  try {\n    const productDocRef = doc(firestore, 'products', productId);\n    await deleteDoc(productDocRef);\n    revalidatePath('/products');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto eliminado con éxito de Firestore.' };\n  } catch (error) {\n    console.error(\"Error deleting product from Firestore:\", error);\n    return { success: false, message: 'Error al eliminar el producto de Firestore. Inténtalo de nuevo.' };\n  }\n}\n\n    "],"names":[],"mappings":";;;;;;;;;;;;;;IA2BsB;IA6CA;IAmEA;IAeA;IAqBA;IAeA;IAOA;IAgCA;IA0BA;IA2CA","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { PageHeader } from '@/components/page-header';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport Image from 'next/image';\nimport { getProducts } from '@/app/actions'; \nimport { Loader2, PackageSearch } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\n\n// Update Product type to expect createdAt as a string (ISO string) and include stock\nexport type Product = {\n  id: string;\n  name: string;\n  description: string;\n  price: string;\n  imageSrc: string; // Will always be a valid URL or placeholder from actions.ts\n  aiHint: string;\n  stock?: number;\n  createdAt?: string; \n};\n\nexport default function ProductsPage() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const fetchedProducts = await getProducts();\n        setProducts(fetchedProducts.sort((a, b) => new Date(b.createdAt!).getTime() - new Date(a.createdAt!).getTime()));\n      } catch (err) {\n        setError('Failed to load products. Please try again later.');\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchProducts();\n  }, []);\n\n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      <PageHeader\n        title=\"Nuestros Productos\"\n        description=\"Descubre nuestra selección de productos premium para el cuidado del cabello y la barba.\"\n      />\n      {isLoading && (\n        <div className=\"flex justify-center items-center py-10\">\n          <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n          <p className=\"ml-4 text-lg text-muted-foreground\">Cargando productos...</p>\n        </div>\n      )}\n      {error && (\n        <div className=\"text-center py-10\">\n          <p className=\"text-destructive text-lg\">{error}</p>\n        </div>\n      )}\n      {!isLoading && !error && products.length === 0 && (\n        <div className=\"text-center py-20\">\n          <PackageSearch className=\"h-16 w-16 mx-auto text-muted-foreground mb-4\" />\n          <p className=\"text-muted-foreground text-xl\">No hay productos disponibles en este momento.</p>\n          <p className=\"text-muted-foreground text-sm\">Vuelve a consultar más tarde o añade productos desde el panel de administración.</p>\n        </div>\n      )}\n      {!isLoading && !error && products.length > 0 && (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n          {products.map((product) => (\n            <Card key={product.id} className=\"flex flex-col overflow-hidden hover:shadow-xl transition-shadow\">\n              <div className=\"relative aspect-square w-full\">\n                <Image\n                  src={product.imageSrc}\n                  alt={product.name}\n                  layout=\"fill\"\n                  objectFit=\"cover\"\n                  data-ai-hint={product.aiHint}\n                />\n                 {typeof product.stock === 'number' && product.stock === 0 && (\n                  <Badge variant=\"destructive\" className=\"absolute top-2 right-2\">Agotado</Badge>\n                )}\n              </div>\n              <CardHeader>\n                <CardTitle className=\"text-xl font-headline\">{product.name}</CardTitle>\n                <CardDescription className=\"text-sm h-16 overflow-hidden text-ellipsis\">{product.description}</CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex-grow\">\n                <p className=\"text-lg font-semibold text-primary\">{product.price}</p>\n              </CardContent>\n              <CardFooter className=\"flex justify-between items-center\">\n                {typeof product.stock === 'number' && product.stock > 0 && (\n                  <p className=\"text-sm text-green-600 dark:text-green-400\">\n                    Stock: {product.stock}\n                  </p>\n                )}\n                 {typeof product.stock === 'number' && product.stock === 0 && (\n                  <p className=\"text-sm text-destructive\">\n                    Agotado\n                  </p>\n                )}\n                 {typeof product.stock !== 'number' && (\n                  <p className=\"text-sm text-muted-foreground\">\n                    Stock no disponible\n                  </p>\n                )}\n                {/* Future: Add to cart button \n                <Button className=\"w-full\">Añadir al Carrito</Button>\n                */}\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}